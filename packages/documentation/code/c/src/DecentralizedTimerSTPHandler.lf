target C {
    timeout: 5 sec,
    coordination: decentralized
}
import Count from "Federated.lf"
reactor PrintTimer(STP_offset:time(10 usec)) {
    timer t(0, 1 sec);
    input in:int;
    reaction(in) {=
        lf_print("Received: %d at (%lld, %d)", in->value,
            lf_time_logical_elapsed(), lf_tag().microstep
        );
    =} STP(0) {=
        lf_print("****** STP violation handler invoked at (%lld, %d). "
            "Intended tag was (%lld, %d).",
            lf_time_logical_elapsed(), lf_tag().microstep,
            in->intended_tag.time - lf_time_start(), in->intended_tag.microstep
        );
    =}
    reaction(t) {=
        lf_print("Timer ticked at (%lld, %d).", 
            lf_time_logical_elapsed(), lf_tag().microstep
        );
    =}
}
federated reactor {
    c = new Count();
    p = new PrintTimer();
    c.out -> p.in;
}
